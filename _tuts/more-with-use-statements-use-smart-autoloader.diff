diff --git a/index.php b/index.php
index a56751e..87872bf 100644
--- a/index.php
+++ b/index.php
@@ -1,18 +1,22 @@
 <?php
 
 spl_autoload_register(function ($class) {
-    if ($class === 'Model\Planet\RandomlyColoredPlanet') {
-        require __DIR__ . '/RandomlyColoredPlanet.php';
-    }
+    require __DIR__ . '/src/' . str_replace('\\', '/', $class) . '.php';
 });
 
-require __DIR__ . '/PlanetRenderer.php';
-require __DIR__ . '/PlanetInterface.php';
+require __DIR__ . '/src/Service/PlanetRenderer.php';
+require __DIR__ . '/src/Model/Planet/PlanetInterface.php';
+require __DIR__ . '/src/Model/Planet/GasPlanet.php';
+require __DIR__ . '/src/Model/Planet/SolidPlanet.php';
+require __DIR__ . '/src/Model/Planet/RandomlyColoredPlanet.php';
 
-use Model\Planet\RandomlyColoredPlanet;
 use Service\PlanetRenderer;
 
-$planet = new RandomlyColoredPlanet('0969F9', 'F96909');
+$planet1 = new GasPlanet(GasPlanet::MATERIAL_AMMONIA, 49);
+$planet2 = new SolidPlanet(27, '353535');
+$planet3 = new RandomlyColoredPlanet('0969F9', 'F96909');
 
 $renderer = new PlanetRenderer();
-echo $renderer->render($planet);
+echo $renderer->render($planet1);
+echo $renderer->render($planet2);
+echo $renderer->render($planet3);
diff --git a/src/Model/Planet/AbstractPlanet.php b/src/Model/Planet/AbstractPlanet.php
new file mode 100644
index 0000000..e508276
--- /dev/null
+++ b/src/Model/Planet/AbstractPlanet.php
@@ -0,0 +1,8 @@
+<?php
+
+abstract class AbstractPlanet
+{
+    abstract public function getRadius();
+
+    abstract public function getHexColor();
+}
diff --git a/src/Model/Planet/GasPlanet.php b/src/Model/Planet/GasPlanet.php
new file mode 100644
index 0000000..045e0be
--- /dev/null
+++ b/src/Model/Planet/GasPlanet.php
@@ -0,0 +1,50 @@
+<?php
+
+class GasPlanet implements PlanetInterface
+{
+    const MATERIAL_AMMONIA = 'ammonia';
+    const MATERIAL_HYDROGEN = 'hydrogen';
+    const MATERIAL_HELIUM = 'helium';
+    const MATERIAL_METHANE = 'methane';
+
+    private $diameter;
+
+    private $mainElement;
+
+    public function __construct($mainElement, $diameter)
+    {
+        $this->diameter = $diameter;
+        $this->mainElement = $mainElement;
+    }
+
+    public static function getAllElements()
+    {
+        return [
+            self::MATERIAL_AMMONIA,
+            self::MATERIAL_HYDROGEN,
+            self::MATERIAL_HELIUM,
+            self::MATERIAL_METHANE,
+        ];
+    }
+
+    public function getRadius()
+    {
+        return $this->diameter / 2;
+    }
+
+    public function getHexColor()
+    {
+        // a "fake" map of elements to colors
+        switch ($this->mainElement) {
+            case self::MATERIAL_AMMONIA:
+                return '663300';
+            case self::MATERIAL_HYDROGEN:
+            case self::MATERIAL_HELIUM:
+                return 'FFFF66';
+            case self::MATERIAL_METHANE:
+                return '0066FF';
+            default:
+                return '464646';
+        }
+    }
+}
diff --git a/src/Model/Planet/PlanetInterface.php b/src/Model/Planet/PlanetInterface.php
new file mode 100644
index 0000000..160b4d9
--- /dev/null
+++ b/src/Model/Planet/PlanetInterface.php
@@ -0,0 +1,18 @@
+<?php
+
+interface PlanetInterface
+{
+    /**
+     * Return the radius if the planet, in thousands of kilometers.
+     *
+     * @return integer
+     */
+    public function getRadius();
+
+    /**
+     * Return the hex color (without the #) for the planet.
+     *
+     * @return string
+     */
+    public function getHexColor();
+}
diff --git a/src/Model/Planet/RandomlyColoredPlanet.php b/src/Model/Planet/RandomlyColoredPlanet.php
new file mode 100644
index 0000000..9f887da
--- /dev/null
+++ b/src/Model/Planet/RandomlyColoredPlanet.php
@@ -0,0 +1,32 @@
+<?php
+
+class RandomlyColoredPlanet implements PlanetInterface
+{
+    private $color1;
+    private $color2;
+
+    public function __construct($color1, $color2)
+    {
+        $this->color1 = $color1;
+        $this->color2 = $color2;
+    }
+
+    public function getRandomColor()
+    {
+        $colors = [$this->color1, $this->color2];
+
+        $randomKey = array_rand($colors);
+
+        return $colors[$randomKey];
+    }
+
+    public function getHexColor()
+    {
+        return $this->getRandomColor();
+    }
+
+    public function getRadius()
+    {
+        return 100;
+    }
+}
diff --git a/src/Model/Planet/SolidPlanet.php b/src/Model/Planet/SolidPlanet.php
new file mode 100644
index 0000000..da5767e
--- /dev/null
+++ b/src/Model/Planet/SolidPlanet.php
@@ -0,0 +1,24 @@
+<?php
+
+class SolidPlanet implements PlanetInterface
+{
+    private $radius;
+
+    private $hexColor;
+
+    public function __construct($radius, $hexColor)
+    {
+        $this->radius = $radius;
+        $this->hexColor = $hexColor;
+    }
+
+    public function getRadius()
+    {
+        return $this->radius;
+    }
+
+    public function getHexColor()
+    {
+        return $this->hexColor;
+    }
+}
diff --git a/src/Service/PlanetRenderer.php b/src/Service/PlanetRenderer.php
new file mode 100644
index 0000000..12a5a3d
--- /dev/null
+++ b/src/Service/PlanetRenderer.php
@@ -0,0 +1,19 @@
+<?php
+
+namespace Service;
+
+use PlanetInterface;
+
+class PlanetRenderer
+{
+    public function render(PlanetInterface $planet)
+    {
+        return sprintf(
+            '<div style="width: %spx; height: %spx; border-radius: %spx; background-color: #%s;"></div>',
+            $planet->getRadius() * 2,
+            $planet->getRadius() * 2,
+            $planet->getRadius(),
+            $planet->getHexColor()
+        );
+    }
+}
